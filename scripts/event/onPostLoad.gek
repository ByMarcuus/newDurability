scn newDurabilityPostLoadGame

int index
int flags

ref weapon

Begin Function { short bLoadedWithoutError }
    if eval (!bLoadedWithoutError)
        return
    endif

    PrintD "NewDurability: Disabling 'Override DamageToWeaponMult' Flag..."
    GetLoadedType newDurabilityList, 40 ; TODO: Printvar

    let index := ListGetCount newDurabilityList - 1 ; TODO: Check if the last item has that index
    while (index -= 1) >= 0
        let weapon := ListGetNthForm newDurabilityList, index
        ListRemoveNthForm newDurabilityList, index
        if eval (IsQuestItem weapon) ; TODO: Do we really want to skip quest items?
            ; printvar weapon TODO:
            continue
        endif

        let flags := GetWeaponFlags2 weapon
        if eval (GetBit flags, 7) ; TODO: Check if this is correct
            SetWeaponFlags2 weapon, (flags - 128) ; TODO: Check if this is correct
        endif
    loop

    if eval (!bDisableDurability)
        ; printvar (GetEventHandlers)
        SetEventHandlerAlt "OnActorEquip", "newDurabilityOnActorEquip" 1::Player ; TODO: Check if it's recreated every time
        ; SetOnMenuCloseEventHandler newDurabilityAfterLevelUp, 0, 1027
        SetOnMenuCloseEventHandler newDurabilityAfterLevelUp, 1, 1027
    else
        PrintD "NewDurability: Disabling durability logic..."
        RemoveEventHandler "PostLoadGame", "newDurabilityPostLoadGame" ; TODO: I don't know if removing itself is valid
    endif
End